{
  "version": 4,
  "terraform_version": "1.0.0",
  "serial": 98,
  "lineage": "b30e3921-489f-f54b-4c8a-654f021db97b",
  "outputs": {
    "cert_manager_irsa_role_arn": {
      "value": "arn:aws:iam::901305836452:role/botney-eks-cert_manager-irsa",
      "type": "string"
    },
    "cluster_endpoint": {
      "value": "https://45A8EC1E76FFE23A2F4E50B84C6EEE9E.gr7.us-west-2.eks.amazonaws.com",
      "type": "string"
    },
    "cluster_security_group_id": {
      "value": "sg-035ef515dfb667d49",
      "type": "string"
    },
    "config_map_aws_auth": {
      "value": [
        {
          "binary_data": {},
          "data": {
            "mapAccounts": "[]\n",
            "mapRoles": "- \"groups\":\n  - \"system:bootstrappers\"\n  - \"system:nodes\"\n  \"rolearn\": \"arn:aws:iam::901305836452:role/botney-eks-QBJxnN1Z2021062520072735610000000c\"\n  \"username\": \"system:node:{{EC2PrivateDNSName}}\"\n",
            "mapUsers": "[]\n"
          },
          "id": "kube-system/aws-auth",
          "metadata": [
            {
              "annotations": {},
              "generate_name": "",
              "generation": 0,
              "labels": {
                "app.kubernetes.io/managed-by": "Terraform",
                "terraform.io/module": "terraform-aws-modules.eks.aws"
              },
              "name": "aws-auth",
              "namespace": "kube-system",
              "resource_version": "709",
              "uid": "2b55682a-715d-4a4a-824a-e28e7f82a24d"
            }
          ]
        }
      ],
      "type": [
        "tuple",
        [
          [
            "object",
            {
              "binary_data": [
                "map",
                "string"
              ],
              "data": [
                "map",
                "string"
              ],
              "id": "string",
              "metadata": [
                "list",
                [
                  "object",
                  {
                    "annotations": [
                      "map",
                      "string"
                    ],
                    "generate_name": "string",
                    "generation": "number",
                    "labels": [
                      "map",
                      "string"
                    ],
                    "name": "string",
                    "namespace": "string",
                    "resource_version": "string",
                    "uid": "string"
                  }
                ]
              ]
            }
          ]
        ]
      ]
    },
    "ingress_hostname_aws": {
      "value": "a7ce5d529ac5c4b0484bc03fb8e550c5-781692826.us-west-2.elb.amazonaws.com",
      "type": "string"
    },
    "kubectl_config": {
      "value": "apiVersion: v1\npreferences: {}\nkind: Config\n\nclusters:\n- cluster:\n    server: https://45A8EC1E76FFE23A2F4E50B84C6EEE9E.gr7.us-west-2.eks.amazonaws.com\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EWXlOVEl3TURJeU1Gb1hEVE14TURZeU16SXdNREl5TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUZ4ClpmWEZKZ1E4V005UnJjVTJMbFdLbnhVN0FKeGNFNmVvMDc3S25uOTd3SFJMM0htSkdOY3BxdDU3VktDbFZvUUkKTFBTMGtUUWFrWnZhc2pTLzNCNG5NdlpPME1pYkh1TW5ITlFIRld1MEo0UmtieGZhSFA3QktNakdXRUlTYmcxcAptOHFFQjZKTDdOUzl6VDQrQXk2NWVmTzJaZG1iM3JEZG1zWHRJTHJrN3pVUDhQUGVQWWtUeVo2ZDVuZnJPVXEwCk1DbkM0YWxpRUJ6UEVlQlB5NXFlUzVqaDMyazZQUnlFUUxlWWtISWdzOHgvdmNqNC9Ba2ZpT3ljM0VVUXIzK24KeHpzOE1KdlZnajRaaUsxWVA0dlVhcEVSNjlPZ2kyZzJTQUFxRzVabXNaelRnaXZFblFBUldqZ1J1LzBrMnF3Lwpad3ZQeE81aEU0M1A0cGpSalNNQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZMUkErUUJGKzBOVWk2Z25sWTFSZlcwM0ZWZnlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCa0U2MlFqcTN2YUhLMW5CU0s0K3pjVXNpc3VUN3VQa1R4RzR3QnZMdjEyMy9Rd1hyZwpaMXlZeUFscnpGd3dBcVB3bXNnZ1VvNlBpZ3ZQcU1GMFVIRmhvZ0JXWVcvMWpTT1Vkb0krWFUxTmFMWStVRFlPCkxRZUNVMUhtc1JxTlN3MENwOExCeVNBZ1h4ajMwcVlSWUkydGE1QVBqUE0zdTZlYXBLVTRYMWFsUGlyZVU0ZDYKSzZOcmZZQ2FqM0R4c0VQZ0FoNVIzY2JZbWJteDhrNDE4Ynl5RXJNT3F5T3RPUGFPZlhTL3p1MGtXUEU4V2ZNVgo4dnN1bVNoSkFtdlZyVStFa2lFS29iUlpYWUhJNWNQTnFPOFBEcEFHT0U0d0NRei92VTRzQXd2ZlNlWU43UitICm9Ha2ZGSnBaRmw0bVZXWUZEeXI5MzVQSnI5amc0Ty9DU3ZnTAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n  name: eks_botney-eks-QBJxnN1Z\n\ncontexts:\n- context:\n    cluster: eks_botney-eks-QBJxnN1Z\n    user: eks_botney-eks-QBJxnN1Z\n  name: eks_botney-eks-QBJxnN1Z\n\ncurrent-context: eks_botney-eks-QBJxnN1Z\n\nusers:\n- name: eks_botney-eks-QBJxnN1Z\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1alpha1\n      command: aws-iam-authenticator\n      args:\n        - \"token\"\n        - \"-i\"\n        - \"botney-eks-QBJxnN1Z\"\n",
      "type": "string"
    },
    "name_servers": {
      "value": [
        "ns-1390.awsdns-45.org",
        "ns-1705.awsdns-21.co.uk",
        "ns-401.awsdns-50.com",
        "ns-977.awsdns-58.net"
      ],
      "type": [
        "list",
        "string"
      ]
    },
    "region": {
      "value": "us-west-2",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_availability_zones",
      "name": "available",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "all_availability_zones": null,
            "exclude_names": null,
            "exclude_zone_ids": null,
            "filter": null,
            "group_names": [
              "us-west-2"
            ],
            "id": "us-west-2",
            "names": [
              "us-west-2a",
              "us-west-2b",
              "us-west-2c",
              "us-west-2d"
            ],
            "state": null,
            "zone_ids": [
              "usw2-az2",
              "usw2-az1",
              "usw2-az3",
              "usw2-az4"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-west-2:901305836452:cluster/botney-eks-QBJxnN1Z",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EWXlOVEl3TURJeU1Gb1hEVE14TURZeU16SXdNREl5TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUZ4ClpmWEZKZ1E4V005UnJjVTJMbFdLbnhVN0FKeGNFNmVvMDc3S25uOTd3SFJMM0htSkdOY3BxdDU3VktDbFZvUUkKTFBTMGtUUWFrWnZhc2pTLzNCNG5NdlpPME1pYkh1TW5ITlFIRld1MEo0UmtieGZhSFA3QktNakdXRUlTYmcxcAptOHFFQjZKTDdOUzl6VDQrQXk2NWVmTzJaZG1iM3JEZG1zWHRJTHJrN3pVUDhQUGVQWWtUeVo2ZDVuZnJPVXEwCk1DbkM0YWxpRUJ6UEVlQlB5NXFlUzVqaDMyazZQUnlFUUxlWWtISWdzOHgvdmNqNC9Ba2ZpT3ljM0VVUXIzK24KeHpzOE1KdlZnajRaaUsxWVA0dlVhcEVSNjlPZ2kyZzJTQUFxRzVabXNaelRnaXZFblFBUldqZ1J1LzBrMnF3Lwpad3ZQeE81aEU0M1A0cGpSalNNQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZMUkErUUJGKzBOVWk2Z25sWTFSZlcwM0ZWZnlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCa0U2MlFqcTN2YUhLMW5CU0s0K3pjVXNpc3VUN3VQa1R4RzR3QnZMdjEyMy9Rd1hyZwpaMXlZeUFscnpGd3dBcVB3bXNnZ1VvNlBpZ3ZQcU1GMFVIRmhvZ0JXWVcvMWpTT1Vkb0krWFUxTmFMWStVRFlPCkxRZUNVMUhtc1JxTlN3MENwOExCeVNBZ1h4ajMwcVlSWUkydGE1QVBqUE0zdTZlYXBLVTRYMWFsUGlyZVU0ZDYKSzZOcmZZQ2FqM0R4c0VQZ0FoNVIzY2JZbWJteDhrNDE4Ynl5RXJNT3F5T3RPUGFPZlhTL3p1MGtXUEU4V2ZNVgo4dnN1bVNoSkFtdlZyVStFa2lFS29iUlpYWUhJNWNQTnFPOFBEcEFHT0U0d0NRei92VTRzQXd2ZlNlWU43UitICm9Ha2ZGSnBaRmw0bVZXWUZEeXI5MzVQSnI5amc0Ty9DU3ZnTAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
              }
            ],
            "created_at": "2021-06-25 19:55:32.469 +0000 UTC",
            "enabled_cluster_log_types": [],
            "endpoint": "https://45A8EC1E76FFE23A2F4E50B84C6EEE9E.gr7.us-west-2.eks.amazonaws.com",
            "id": "botney-eks-QBJxnN1Z",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-west-2.amazonaws.com/id/45A8EC1E76FFE23A2F4E50B84C6EEE9E"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "service_ipv4_cidr": "172.20.0.0/16"
              }
            ],
            "name": "botney-eks-QBJxnN1Z",
            "platform_version": "eks.1",
            "role_arn": "arn:aws:iam::901305836452:role/botney-eks-QBJxnN1Z20210625195500657700000003",
            "status": "ACTIVE",
            "tags": {
              "App": "botney",
              "GithubOrg": "terraform-aws-modules",
              "GithubRepo": "terraform-aws-eks"
            },
            "version": "1.20",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0a302a128193c9ada",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-035ef515dfb667d49"
                ],
                "subnet_ids": [
                  "subnet-076212cebf120ffe4",
                  "subnet-08433c50deb3affc8"
                ],
                "vpc_id": "vpc-06b0ac8f858c3ed98"
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "botney-eks-QBJxnN1Z",
            "name": "botney-eks-QBJxnN1Z",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMuYW1hem9uYXdzLmNvbS8_QWN0aW9uPUdldENhbGxlcklkZW50aXR5JlZlcnNpb249MjAxMS0wNi0xNSZYLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUE1RFdRRFVPU0JISjJTS0JKJTJGMjAyMTA2MjYlMkZ1cy1lYXN0LTElMkZzdHMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDIxMDYyNlQwMDQxNTVaJlgtQW16LUV4cGlyZXM9MCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QlM0J4LWs4cy1hd3MtaWQmWC1BbXotU2lnbmF0dXJlPWU0YzAwYTAyN2NjMjNiMzE4MTYyODAwMmE4NDk1M2FlN2NlMzVmOThlZmY0Y2QxOWM5M2M2NmFiYzMzY2ZlMzA"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "kubernetes_service",
      "name": "ambassador_loadbalancer",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ambassador/ambassador",
            "metadata": [
              {
                "annotations": {
                  "a8r.io/bugs": "https://github.com/datawire/ambassador/issues",
                  "a8r.io/chat": "http://a8r.io/Slack",
                  "a8r.io/dependencies": "ambassador-redis.ambassador",
                  "a8r.io/description": "The Ambassador Edge Stack goes beyond traditional API Gateways and Ingress Controllers with the advanced edge features needed to support developer self-service and full-cycle development.",
                  "a8r.io/documentation": "https://www.getambassador.io/docs/edge-stack/latest/",
                  "a8r.io/owner": "Ambassador Labs",
                  "a8r.io/repository": "github.com/datawire/ambassador",
                  "a8r.io/support": "https://www.getambassador.io/about-us/support/",
                  "meta.helm.sh/release-name": "ambassador",
                  "meta.helm.sh/release-namespace": "ambassador"
                },
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "ambassador-service",
                  "app.kubernetes.io/instance": "ambassador",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "ambassador",
                  "app.kubernetes.io/part-of": "ambassador",
                  "helm.sh/chart": "ambassador-6.7.0",
                  "product": "aes"
                },
                "name": "ambassador",
                "namespace": "ambassador",
                "resource_version": "3252",
                "uid": "7ce5d529-ac5c-4b04-84bc-03fb8e550c52"
              }
            ],
            "spec": [
              {
                "cluster_ip": "172.20.235.75",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Local",
                "health_check_node_port": 31927,
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "name": "http",
                    "node_port": 32259,
                    "port": 80,
                    "protocol": "TCP",
                    "target_port": "8080"
                  },
                  {
                    "name": "https",
                    "node_port": 32707,
                    "port": 443,
                    "protocol": "TCP",
                    "target_port": "8443"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app.kubernetes.io/instance": "ambassador",
                  "app.kubernetes.io/name": "ambassador"
                },
                "session_affinity": "None",
                "type": "LoadBalancer"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": [
                      {
                        "hostname": "a7ce5d529ac5c4b0484bc03fb8e550c5-781692826.us-west-2.elb.amazonaws.com",
                        "ip": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cert_manager_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::901305836452:policy/botney-eks-cert-manager-policy",
            "description": "Policy, which allows CertManager to create Route53 records",
            "id": "arn:aws:iam::901305836452:policy/botney-eks-cert-manager-policy",
            "name": "botney-eks-cert-manager-policy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"route53:GetChange\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:route53:::change/*\"},{\"Action\":[\"route53:ChangeResourceRecordSets\",\"route53:ListResourceRecordSets\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:route53:::hostedzone/Z05595372RJ37741S3GJD\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA5DWQDUOSCSQCDEAM7",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_route53_zone.primary"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "aws",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "failover_routing_policy": [],
            "fqdn": "*.sebastianfranco.me",
            "geolocation_routing_policy": [],
            "health_check_id": "",
            "id": "Z05595372RJ37741S3GJD_*_CNAME_aws",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": null,
            "name": "*",
            "records": [
              "a7ce5d529ac5c4b0484bc03fb8e550c5-781692826.us-west-2.elb.amazonaws.com"
            ],
            "set_identifier": "aws",
            "ttl": 300,
            "type": "CNAME",
            "weighted_routing_policy": [
              {
                "weight": 90
              }
            ],
            "zone_id": "Z05595372RJ37741S3GJD"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "aws_route53_zone.primary",
            "module.ambassador.helm_release.release",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.http.wait_for_cluster",
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "kubernetes_namespace.ambassador_namespace",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_eks_cluster.cluster",
            "data.kubernetes_service.ambassador_loadbalancer",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group.cluster",
            "module.eks.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_zone",
      "name": "primary",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "comment": "Managed by Terraform",
            "delegation_set_id": "",
            "force_destroy": false,
            "id": "Z05595372RJ37741S3GJD",
            "name": "sebastianfranco.me",
            "name_servers": [
              "ns-1390.awsdns-45.org",
              "ns-1705.awsdns-21.co.uk",
              "ns-401.awsdns-50.com",
              "ns-977.awsdns-58.net"
            ],
            "tags": {},
            "tags_all": {},
            "vpc": [],
            "zone_id": "Z05595372RJ37741S3GJD"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "all_worker_mgmt",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:901305836452:security-group/sg-0809db9c54ef99d10",
            "description": "Managed by Terraform",
            "egress": [],
            "id": "sg-0809db9c54ef99d10",
            "ingress": [
              {
                "cidr_blocks": [
                  "10.0.0.0/8",
                  "172.16.0.0/12",
                  "192.168.0.0/16"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              }
            ],
            "name": "all_worker_management2021062519552078870000000a",
            "name_prefix": "all_worker_management",
            "owner_id": "901305836452",
            "revoke_rules_on_delete": false,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "vpc_id": "vpc-06b0ac8f858c3ed98"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "worker_group_mgmt_one",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:901305836452:security-group/sg-0ce09df83b135decf",
            "description": "Managed by Terraform",
            "egress": [],
            "id": "sg-0ce09df83b135decf",
            "ingress": [
              {
                "cidr_blocks": [
                  "10.0.0.0/8"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              }
            ],
            "name": "worker_group_mgmt_one20210625195520788500000009",
            "name_prefix": "worker_group_mgmt_one",
            "owner_id": "901305836452",
            "revoke_rules_on_delete": false,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "vpc_id": "vpc-06b0ac8f858c3ed98"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "ambassador_namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "ambassador",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "ambassador",
                "resource_version": "710",
                "uid": "c7a43148-0fbb-4486-bfbe-1af3f74c44b3"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.http.wait_for_cluster",
            "module.vpc.aws_subnet.private",
            "module.eks.aws_security_group.workers",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.vpc.aws_vpc.this",
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.aws_cloudwatch_log_group.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "certmanager_namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "cert-manager",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "cert-manager",
                "resource_version": "29102",
                "uid": "0fd2bb91-7dae-487b-b22b-aa6b0a094675"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_subnet.private",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.data.aws_partition.current",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_availability_zones.available",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "random_string.suffix",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.http.wait_for_cluster"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_string",
      "name": "suffix",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "id": "QBJxnN1Z",
            "keepers": null,
            "length": 8,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "override_special": null,
            "result": "QBJxnN1Z",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.ambassador[0]",
      "mode": "managed",
      "type": "helm_release",
      "name": "release",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "ambassador",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "ambassador",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 20,
            "metadata": [
              {
                "app_version": "1.13.0",
                "chart": "ambassador",
                "name": "ambassador",
                "namespace": "ambassador",
                "revision": 1,
                "values": "{\"adminService\":{\"annotations\":{},\"create\":true,\"nodePort\":38877,\"port\":8877,\"snapshotPort\":8005,\"type\":\"ClusterIP\"},\"affinity\":{},\"agent\":{\"cloudConnectToken\":\"\",\"createArgoRBAC\":true,\"enabled\":false,\"image\":{\"repository\":null,\"tag\":null},\"rpcAddress\":\"https://app.getambassador.io/\"},\"ambassadorConfig\":\"\",\"authService\":{\"create\":true,\"deploymentExtraName\":\"auth\",\"optional_configurations\":{}},\"autoscaling\":{\"enabled\":false,\"maxReplicas\":5,\"metrics\":[{\"resource\":{\"name\":\"cpu\",\"target\":{\"averageUtilization\":60,\"type\":\"Utilization\"}},\"type\":\"Resource\"},{\"resource\":{\"name\":\"memory\",\"target\":{\"averageUtilization\":60,\"type\":\"Utilization\"}},\"type\":\"Resource\"}],\"minReplicas\":2},\"crds\":{\"create\":true,\"enabled\":true,\"keep\":true},\"createDevPortalMappings\":true,\"createNamespace\":false,\"daemonSet\":false,\"deploymentAnnotations\":{},\"deploymentLabels\":{},\"deploymentStrategy\":{\"type\":\"RollingUpdate\"},\"deploymentTool\":\"\",\"devportal\":{\"docsPrefix\":\"/documentation/\"},\"dnsPolicy\":\"ClusterFirst\",\"docker\":{\"imagePullSecretName\":null,\"useImagePullSecret\":false},\"enableAES\":true,\"enableTestService\":false,\"env\":{},\"envRaw\":[],\"fullnameOverride\":\"\",\"hostNetwork\":false,\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"quay.io/datawire/aes\",\"tag\":\"1.13.0\"},\"imagePullSecrets\":[],\"initContainers\":[],\"licenseKey\":{\"annotations\":{},\"createSecret\":true,\"secretName\":null,\"value\":null},\"livenessProbe\":{\"failureThreshold\":3,\"initialDelaySeconds\":30,\"periodSeconds\":3},\"metrics\":{\"serviceMonitor\":{\"enabled\":false}},\"nameOverride\":\"\",\"namespaceOverride\":\"\",\"nodeSelector\":{},\"podAnnotations\":{},\"podDisruptionBudget\":{},\"podLabels\":{},\"priorityClassName\":\"\",\"prometheusExporter\":{\"enabled\":false,\"pullPolicy\":\"IfNotPresent\",\"repository\":\"prom/statsd-exporter\",\"resources\":{},\"tag\":\"v0.8.1\"},\"rateLimit\":{\"create\":true,\"deploymentExtraName\":\"ratelimit\"},\"rbac\":{\"create\":true,\"nameOverride\":null,\"podSecurityPolicies\":[]},\"readinessProbe\":{\"failureThreshold\":3,\"initialDelaySeconds\":30,\"periodSeconds\":3},\"redis\":{\"affinity\":{},\"annotations\":{\"deployment\":{},\"service\":{}},\"create\":true,\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"redis\",\"tag\":\"5.0.1\"},\"nodeSelector\":{},\"resources\":{},\"tolerations\":[]},\"redisURL\":null,\"registry\":{\"create\":false},\"replicaCount\":3,\"resolvers\":{\"consul\":{\"create\":false,\"name\":false,\"spec\":{}},\"endpoint\":{\"create\":false,\"name\":\"endpoint\"}},\"resources\":{\"limits\":{\"cpu\":\"1000m\",\"memory\":\"600Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"600Mi\"}},\"restartPolicy\":null,\"scope\":{\"singleNamespace\":false},\"security\":{\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false},\"podSecurityContext\":{\"runAsUser\":8888},\"podSecurityPolicy\":{}},\"service\":{\"annotations\":{},\"externalIPs\":[],\"externalTrafficPolicy\":\"Local\",\"loadBalancerIP\":null,\"loadBalancerSourceRanges\":[],\"nameOverride\":null,\"ports\":[{\"name\":\"http\",\"port\":80,\"targetPort\":8080},{\"name\":\"https\",\"port\":443,\"targetPort\":8443}],\"sessionAffinity\":\"None\",\"sessionAffinityConfig\":{},\"type\":\"LoadBalancer\"},\"serviceAccount\":{\"create\":true,\"name\":null},\"servicePreview\":{\"enabled\":false,\"trafficAgent\":{\"image\":{\"repository\":null,\"tag\":null},\"injector\":{\"crtPEM\":\"\",\"enabled\":true,\"keyPEM\":\"\"},\"port\":9900,\"serviceAccountName\":\"traffic-agent\",\"singleNamespace\":true},\"trafficManager\":{\"image\":{\"repository\":null,\"tag\":null},\"serviceAccountName\":\"traffic-manager\"}},\"sidecarContainers\":[],\"terminationGracePeriodSeconds\":null,\"test\":{\"enabled\":true,\"image\":\"busybox\"},\"tolerations\":[],\"topologySpreadConstraints\":[],\"volumeMounts\":[],\"volumes\":[]}",
                "version": "6.7.0"
              }
            ],
            "name": "ambassador",
            "namespace": "ambassador",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://getambassador.io",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 3600,
            "values": [
              "---\n# Default values for ambassador.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\n# Manually set metadata for the Release.\n#\n# Defaults to .Chart.Name\nnameOverride: \"\"\n# Defaults to .Release.Name-.Chart.Name unless .Release.Name contains \"ambassador\"\nfullnameOverride: \"\"\n# Defaults to .Release.Namespace\nnamespaceOverride: \"\"\n\nreplicaCount: 3\ndaemonSet: false\n\n# This will enable the test-ready Pod (https://github.com/datawire/ambassador-chart/blob/master/templates/tests/test-ready.yaml).\n# It will spawn a busybox container to call Ambassador's check_ready endpoint to validate it is working correctly.\ntest:\n  enabled: true\n  image: busybox\n\n# Enable autoscaling using HorizontalPodAutoscaler\n# daemonSet: true, autoscaling will be disabled\nautoscaling:\n  enabled: false\n  minReplicas: 2\n  maxReplicas: 5\n  metrics: [{\"resource\":{\"name\":\"cpu\",\"target\":{\"averageUtilization\":60,\"type\":\"Utilization\"}},\"type\":\"Resource\"},{\"resource\":{\"name\":\"memory\",\"target\":{\"averageUtilization\":60,\"type\":\"Utilization\"}},\"type\":\"Resource\"}]\n  # - type: Resource\n  #   resource:\n  #     name: cpu\n  #     target:\n  #       type: Utilization\n  #       averageUtilization: 60\n  # - type: Resource\n  #   resource:\n  #     name: memory\n  #     target:\n  #       type: Utilization\n  #       averageUtilization: 60\n\npodDisruptionBudget: {}\n\n\n# namespace:\n#   name: default\n\n# Additional container environment variable\n# Uncomment or add additional environment variables for the container here.\nenv: {}\n  # Exposing statistics via StatsD\n  # STATSD_ENABLED: true\n  # STATSD_HOST: statsd-sink\n  # sets the minimum number of seconds between Envoy restarts\n  # AMBASSADOR_RESTART_TIME: 15\n  # sets the number of seconds that the Envoy will wait for open connections to drain on a restart\n  # AMBASSADOR_DRAIN_TIME: 5\n  # sets the number of seconds that Ambassador will wait for the old Envoy to clean up and exit on a restart\n  # AMBASSADOR_SHUTDOWN_TIME: 10\n  # labels Ambassador with an ID to allow for configuring multiple Ambassadors in a cluster\n  # AMBASSADOR_ID: default\n\n# Additional container environment variable in raw YAML format\n# Uncomment or add additional environment variables for the container here.\nenvRaw: []\n# - name: REDIS_PASSWORD\n#   value: password\n#   valueFrom:\n#     secretKeyRef:\n#       name: redis-password\n#       key: password\n# - name: POD_IP\n#   valueFrom:\n#     fieldRef:\n#       fieldPath: status.podIP\n\nimagePullSecrets: []\n\nsecurity:\n  # Security Context for all containers in the pod.\n  # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#podsecuritycontext-v1-core\n  podSecurityContext: {\"runAsUser\":8888}\n    # runAsUser: 8888\n  # Security Context for the Ambassador container specifically\n  # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#securitycontext-v1-core\n  containerSecurityContext: {\"allowPrivilegeEscalation\":false}\n    # allowPrivilegeEscalation: false\n  # A basic PodSecurityPolicy to ensure Ambassador is running with appropriate security permissions\n  # https://kubernetes.io/docs/concepts/policy/pod-security-policy/\n  #\n  # A set of reasonable defaults is outlined below. This is not created by default as it should only\n  # be created by a one Release. If you want to use the PodSecurityPolicy in the chart, create it in\n  # the \"master\" Release and then leave it unset in all others. Set the `rbac.podSecurityPolicies`\n  # in all non-\"master\" Releases.\n  podSecurityPolicy: {}\n    # # Add AppArmor and Seccomp annotations\n    # # https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor\n    # annotations:\n    # spec:\n    #   seLinux:\n    #     rule: RunAsAny\n    #   supplementalGroups:\n    #     rule: 'MustRunAs'\n    #     ranges:\n    #       # Forbid adding the root group.\n    #       - min: 1\n    #         max: 65535\n    #   fsGroup:\n    #     rule: 'MustRunAs'\n    #     ranges:\n    #       # Forbid adding the root group.\n    #       - min: 1\n    #         max: 65535\n    #   privileged: false\n    #   allowPrivilegeEscalation: false\n    #   runAsUser:\n    #     rule: MustRunAsNonRoot\n\nimage:\n  repository: quay.io/datawire/aes\n  tag: 1.13.0\n  pullPolicy: IfNotPresent\n\ndnsPolicy: \"ClusterFirst\"\nhostNetwork: false\n\nservice:\n  type: LoadBalancer\n\n  # Note that target http ports need to match your ambassador configurations service_port\n  # https://www.getambassador.io/reference/modules/#the-ambassador-module\n  ports: [{\"name\":\"http\",\"port\":80,\"targetPort\":8080},{\"name\":\"https\",\"port\":443,\"targetPort\":8443}]\n    # - name: http\n    #   port: 80\n    #   targetPort: 8080\n    #   # protocol: TCP\n    #   # nodePort: 30080\n    #   # hostPort: 80\n    # - name: https\n    #   port: 443\n    #   targetPort: 8443\n    #   # protocol: TCP\n    #   # nodePort: 30443\n    #   # hostPort: 443\n    # # TCPMapping_Port\n    #   # port: 2222\n    #   # targetPort: 2222\n    #   # protocol: TCP\n    #   # nodePort: 30222\n\n  externalTrafficPolicy: Local\n\n  sessionAffinity: None\n\n  sessionAffinityConfig: {}\n\n  externalIPs: []\n\n  loadBalancerIP: \n\n  loadBalancerSourceRanges: []\n\n  annotations: {}\n\n  # Manually set the name of the generated Service\n  nameOverride: \n  #############################################################################\n  ## Ambassador should be configured using CRD definition. If you want\n  ## to use annotations, the following is an example of annotating the\n  ## Ambassador service with global configuration manifest.\n  ##\n  ## See https://www.getambassador.io/reference/core/ambassador and\n  ## https://www.getambassador.io/reference/core/tls for more info\n  #############################################################################\n  #\n  #  getambassador.io/config: |\n  #    ---\n  #    apiVersion: ambassador/v1\n  #    kind: TLSContext\n  #    name: ambassador\n  #    secret: ambassador-certs\n  #    hosts: [\"*\"]\n  #    ---\n  #    apiVersion: ambassador/v1\n  #    kind: Module\n  #    name: ambassador\n  #    config:\n  #      admin_port: 8001\n  #      diag_port: 8877\n  #      diagnostics:\n  #        enabled: true\n  #      enable_grpc_http11_bridge: false\n  #      enable_grpc_web: false\n  #      enable_http10: false\n  #      enable_ipv4: true\n  #      enable_ipv6: false\n  #      liveness_probe:\n  #        enabled: true\n  #      lua_scripts:\n  #      readiness_probe:\n  #        enabled: true\n  #      server_name: envoy\n  #      service_port: 8080\n  #      use_proxy_proto: false\n  #      use_remote_address: true\n  #      xff_num_trusted_hops: 0\n  #      x_forwarded_proto_redirect: false\n  #      load_balancer:\n  #        policy: round_robin\n  #      circuit_breakers:\n  #        max_connections: 2048\n  #      retry_policy:\n  #        retry_on: \"5xx\"\n  #      cors:\n\nadminService:\n  create: true\n  type: ClusterIP\n  port: 8877\n  snapshotPort: 8005\n  # NodePort used if type is NodePort\n  nodePort: 38877\n  annotations: {}\n\nrbac:\n  # Specifies whether RBAC resources should be created\n  create: true\n  # List of Pod Security Policies to use on the container.\n  # If security.podSecurityPolicy is set, it will be appended to the list\n  podSecurityPolicies: []\n  # Name of the RBAC resources defaults to the name of the release.\n  # Set nameOverride when installing Ambassador with cluster-wide scope in\n  # different namespaces with the same release name to avoid conflicts.\n  nameOverride: \n\nscope:\n  # tells Ambassador to only use resources in the namespace or namespace set by namespace.name\n  singleNamespace: false\n\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \n\ndeploymentStrategy:\n  type: RollingUpdate\n\nrestartPolicy: \n\nterminationGracePeriodSeconds: \n\ninitContainers: []\n\nsidecarContainers: []\n\nlivenessProbe: {\"failureThreshold\":3,\"initialDelaySeconds\":30,\"periodSeconds\":3}\n  # initialDelaySeconds: 30\n  # periodSeconds: 3\n  # failureThreshold: 3\n\nreadinessProbe: {\"failureThreshold\":3,\"initialDelaySeconds\":30,\"periodSeconds\":3}\n  # initialDelaySeconds: 30\n  # periodSeconds: 3\n  # failureThreshold: 3\n\n\nvolumes: []\n\nvolumeMounts: []\n\npodLabels: {}\n\npodAnnotations: {}\n  # prometheus.io/scrape: \"true\"\n  # prometheus.io/port: \"9102\"\n\ndeploymentLabels: {}\n\ndeploymentAnnotations: {}\n  # configmap.reloader.stakater.com/auto: \"true\"\n\nresources: {\"limits\":{\"cpu\":\"1000m\",\"memory\":\"600Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"600Mi\"}}\n  # Recommended resource requests and limits for Ambassador\n  # limits:\n  #   cpu: 1000m\n  #   memory: 600Mi\n  # requests:\n  #   cpu: 200m\n  #   memory: 300Mi\n\npriorityClassName: \"\"\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n\ntopologySpreadConstraints: []\n\nambassadorConfig: \"\"\n\ncrds:\n  enabled: true\n  create: true\n  keep: true\n\n# Prometheus Operator ServiceMonitor configuration\n# See documentation: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitor\nmetrics:\n  serviceMonitor:\n    enabled: false\n    # interval: 30s\n    # scrapeTimeout: 30s\n    # selector: {}\n\n################################################################################\n## Ambassador Edge Stack Configuration                                        ##\n################################################################################\n\n# The Ambassador Edge Stack is free for limited use without a license key.\n# Go to https://{ambassador-host}/edge_stack/admin/#dashboard to register\n# for a community license key.\n\nenableAES: true\n\n# Set createSecret: false is installing multiple releases of The Ambassador\n# Edge Stack in the same namespace.\nlicenseKey:\n  value: \n  createSecret: true\n  secretName: \n  # Annotations to attach to the license-key-secret.\n  annotations: {}\n\n# The DevPortal is exposed at /docs/ endpoint in the AES container.\n# Setting this to true will automatically create routes for the DevPortal.\ncreateDevPortalMappings: true\ndevportal:\n  docsPrefix: \"/documentation/\"\n\n# The Ambassador Edge Stack uses a redis instance for managing authentication,\n# rate limiting, and sharing minor configuration details between pods for\n# centralized management. These values configure the redis instance that ships\n# by default with The Ambassador Edge Stack.\n#\n# URL of your redis instance. Defaults to redis instance created below.\nredisURL: \n\n# Ambassador ships with a basic redis instance. Configure the deployment with the options below.\nredis:\n  create: true\n  image:\n    repository: redis\n    tag: 5.0.1\n    pullPolicy: IfNotPresent\n  # Annotations for Ambassador Pro's redis instance.\n  annotations:\n    deployment: {}\n    service: {}\n  resources: {}\n  # If you want to specify resources, uncomment the following\n  # lines and remove the curly braces after 'resources:'.\n  # These are placeholder values and must be tuned.\n  #   limits:\n  #     cpu: 100m\n  #     memory: 256Mi\n  #   requests:\n  #     cpu: 50m\n  #     memory: 128Mi\n  nodeSelector: {}\n  affinity: {}\n  tolerations: []\n\n\n# Configures the AuthService that ships with the Ambassador Edge Stack.\n# Setting authService.create: false will not install the AES AuthService and\n# allow you to define your own.\n#\n# Typically when using the AES, you will want to keep this set to true and use\n# the External Filter to communicate with a custom authentication service.\n# https://www.getambassador.io/reference/filter-reference/#filter-type-external\nauthService:\n  create: true\n  deploymentExtraName: auth\n  # Set additional configuration options. See https://www.getambassador.io/reference/services/auth-service for more information\n  optional_configurations: {}\n    # include_body:\n    #   max_bytes: 4096\n    #   allow_partial: true\n    # status_on_error:\n    #   code: 403\n    # failure_mode_allow: false\n    # retry_policy:\n    #   retry_on: \"5xx\"\n    #   num_retries: 2\n    # add_linkerd_headers: true\n    # timeout_ms: 30000\n\n\n# Configures the RateLimitService in the Ambassador Edge Stack.\n# Keep this enabled to configure RateLimits in AES.\nrateLimit:\n  create: true\n  deploymentExtraName: ratelimit\n\n# Projects are a beta feature of Ambassador that allow developers to stage and\n# deploy code with nothing more than a Github repository.\n# See: https://www.getambassador.io/docs/latest/topics/using/projects/\nregistry:\n  create: false\n\n# Resolvers are used to configure the discovery service strategy for Ambasador Edge Stack.\n# See: https://www.getambassador.io/docs/latest/topics/running/resolvers/\nresolvers:\n  endpoint:\n    create: false\n    name: endpoint\n  consul:\n    create: false\n    name: false\n    spec: {}\n    # Configuration for a Consul Resolver\n    #   address: consul-server.default.svc.cluster.local:8500\n    #   datacenter: dc1\n\n################################################################################\n## DEPRECATED configuration objects                                           ##\n################################################################################\n\n# DEPRECATED: Ambassador now exposes the /metrics endpoint in Envoy.\n# DEPRECATED: See https://www.getambassador.io/user-guide/monitoring#deployment for more information on how to use the /metrics endpoint\n#\n# DEPRECATED: Enabling the prometheus exporter creates a sidecar and configures ambassador to use it\nprometheusExporter:\n  enabled: false\n  repository: prom/statsd-exporter\n  tag: v0.8.1\n  pullPolicy: IfNotPresent\n  resources: {}\n  # If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  #   limits:\n  #     cpu: 100m\n  #     memory: 256Mi\n  #   requests:\n  #     cpu: 50m\n  #     memory: 128Mi\n  # You can configure the statsd exporter to modify the behavior of mappings and other features.\n  # See documentation: https://github.com/prometheus/statsd_exporter/tree/v0.8.1#metric-mapping-and-configuration\n  # Uncomment the following line if you wish to specify a custom configuration:\n  # configuration: |\n  #   ---\n  #   mappings:\n  #   - match: 'envoy.cluster.*.upstream_cx_connect_ms'\n  #     name: \"envoy_cluster_upstream_cx_connect_time\"\n  #     timer_type: 'histogram'\n  #     labels:\n  #       cluster_name: \"$1\"\n\n# DEPRECATED: Use security.podSecurityContext\n# securityContext:\n#   runAsUser: 8888\n\n\n# Configures Service Preview that ships with the Ambassador Edge Stack and edgectl.\n# Setting servicePreview.enabled: true will install the Traffic Agent Service Account, Traffic Manager with RBAC, and ambassador-injector\nservicePreview:\n  enabled: false\n  trafficManager:\n    image:\n      # Leave blank to use image.repository and image.tag\n      repository:\n      tag:\n    serviceAccountName: \"traffic-manager\"\n  trafficAgent:\n    image:\n      # Leave blank to use image.repository and image.tag\n      repository:\n      tag:\n    singleNamespace: true\n    serviceAccountName: \"traffic-agent\"\n    port: 9900\n\n    # Configure the ambassador-injector webhook for Service Preview Traffic Agent automatic sidecar injection.\n    injector:\n      enabled: true\n\n      # If no injector.crtPEM and injector.keyPEM are provided, a self-signed certificate will be issued\n      # for the Common Name (CN) of `\u003cambassador-injector\u003e.\u003cnamespace\u003e.svc`, which is the cluster-internal DNS name\n      # for the service.\n      crtPEM: \"\"\n      keyPEM: \"\"\n\n# Configure the ambassador agent\nagent:\n  enabled: false\n  # this will be empty when it first gets applied, then the user will edit the agent to\n  # make it start reporting\n  cloudConnectToken: \"\"\n  rpcAddress: https://app.getambassador.io/\n  createArgoRBAC: true\n  image:\n    # Leave blank to use image.repository and image.tag\n    tag:\n    repository:\n\ndeploymentTool: \"\"\n\n# configure docker to pull from private registry\ndocker:\n  useImagePullSecret: false\n  imagePullSecretName:\ncreateNamespace: false\nenableTestService: false\n"
            ],
            "verify": false,
            "version": "6.7.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "data.aws_availability_zones.available",
            "kubernetes_namespace.ambassador_namespace",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.http.wait_for_cluster",
            "module.vpc.aws_vpc.this",
            "random_string.suffix",
            "data.aws_eks_cluster.cluster",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.data.aws_partition.current",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source"
          ]
        }
      ]
    },
    {
      "module": "module.cert_manager_irsa",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "901305836452",
            "arn": "arn:aws:iam::901305836452:user/jhonsfran",
            "id": "901305836452",
            "user_id": "AIDA5DWQDUOSKJ6R4RDDQ"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.cert_manager_irsa",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_with_oidc",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1827775513",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::901305836452:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/45A8EC1E76FFE23A2F4E50B84C6EEE9E\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-west-2.amazonaws.com/id/45A8EC1E76FFE23A2F4E50B84C6EEE9E:sub\": [\n            \"system:serviceaccount:cert-manager:cert-manager\"\n          ]\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:cert-manager:cert-manager"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/45A8EC1E76FFE23A2F4E50B84C6EEE9E:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::901305836452:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/45A8EC1E76FFE23A2F4E50B84C6EEE9E"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.cert_manager_irsa",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.cert_manager_irsa",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::901305836452:role/botney-eks-cert_manager-irsa",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::901305836452:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/45A8EC1E76FFE23A2F4E50B84C6EEE9E\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/45A8EC1E76FFE23A2F4E50B84C6EEE9E:sub\":\"system:serviceaccount:cert-manager:cert-manager\"}}}]}",
            "create_date": "2021-06-26T00:26:01Z",
            "description": "",
            "force_detach_policies": false,
            "id": "botney-eks-cert_manager-irsa",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::901305836452:policy/botney-eks-cert-manager-policy"
            ],
            "max_session_duration": 3600,
            "name": "botney-eks-cert_manager-irsa",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA5DWQDUOSN2F7ZE3XE"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.workers",
            "data.aws_availability_zones.available",
            "module.cert_manager_irsa.data.aws_iam_policy_document.assume_role_with_oidc",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_partition.current",
            "module.cert_manager_irsa.data.aws_caller_identity.current",
            "module.cert_manager_irsa.data.aws_partition.current",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.cert_manager_irsa",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "custom",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "botney-eks-cert_manager-irsa-20210626002608780700000001",
            "policy_arn": "arn:aws:iam::901305836452:policy/botney-eks-cert-manager-policy",
            "role": "botney-eks-cert_manager-irsa"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "aws_route53_zone.primary",
            "module.cert_manager_irsa.data.aws_partition.current",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.cert_manager_irsa.data.aws_caller_identity.current",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "module.eks.data.aws_partition.current",
            "module.cert_manager_irsa.aws_iam_role.this",
            "module.cert_manager_irsa.data.aws_iam_policy_document.assume_role_with_oidc",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "aws_iam_policy.cert_manager_policy",
            "data.aws_availability_zones.available",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_ami",
      "name": "eks_worker",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "arn": "arn:aws:ec2:us-west-2::image/ami-0a1abe779ecfc6a3e",
            "block_device_mappings": [
              {
                "device_name": "/dev/xvda",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-00b3bab01150e4273",
                  "throughput": "0",
                  "volume_size": "20",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              }
            ],
            "creation_date": "2021-06-22T16:29:07.000Z",
            "description": "EKS Kubernetes Worker AMI with AmazonLinux2 image, (k8s: 1.20.4, docker: 19.03.13ce-1.amzn2, containerd: 1.4.1-2.amzn2)",
            "ena_support": true,
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "amazon-eks-node-1.20-v*"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-0a1abe779ecfc6a3e",
            "image_id": "ami-0a1abe779ecfc6a3e",
            "image_location": "amazon/amazon-eks-node-1.20-v20210621",
            "image_owner_alias": "amazon",
            "image_type": "machine",
            "kernel_id": null,
            "most_recent": true,
            "name": "amazon-eks-node-1.20-v20210621",
            "name_regex": null,
            "owner_id": "602401143452",
            "owners": [
              "amazon"
            ],
            "platform": null,
            "platform_details": "Linux/UNIX",
            "product_codes": [],
            "public": true,
            "ramdisk_id": null,
            "root_device_name": "/dev/xvda",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-00b3bab01150e4273",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "usage_operation": "RunInstances",
            "virtualization_type": "hvm"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "901305836452",
            "arn": "arn:aws:iam::901305836452:user/jhonsfran",
            "id": "901305836452",
            "user_id": "AIDA5DWQDUOSKJ6R4RDDQ"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cluster_assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2764486067",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cluster_elb_sl_role_creation",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3709839417",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeAddresses",
                  "ec2:DescribeInternetGateways"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "workers_assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3778018924",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSWorkerAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "http",
      "name": "wait_for_cluster",
      "provider": "provider[\"registry.terraform.io/terraform-aws-modules/http\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "body": "ok",
            "ca_certificate": "-----BEGIN CERTIFICATE-----\nMIIC5zCCAc+gAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTIxMDYyNTIwMDIyMFoXDTMxMDYyMzIwMDIyMFowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMFx\nZfXFJgQ8WM9RrcU2LlWKnxU7AJxcE6eo077Knn97wHRL3HmJGNcpqt57VKClVoQI\nLPS0kTQakZvasjS/3B4nMvZO0MibHuMnHNQHFWu0J4RkbxfaHP7BKMjGWEISbg1p\nm8qEB6JL7NS9zT4+Ay65efO2Zdmb3rDdmsXtILrk7zUP8PPePYkTyZ6d5nfrOUq0\nMCnC4aliEBzPEeBPy5qeS5jh32k6PRyEQLeYkHIgs8x/vcj4/AkfiOyc3EUQr3+n\nxzs8MJvVgj4ZiK1YP4vUapER69Ogi2g2SAAqG5ZmsZzTgivEnQARWjgRu/0k2qw/\nZwvPxO5hE43P4pjRjSMCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFLRA+QBF+0NUi6gnlY1RfW03FVfyMA0GCSqGSIb3\nDQEBCwUAA4IBAQBkE62Qjq3vaHK1nBSK4+zcUsisuT7uPkTxG4wBvLv123/QwXrg\nZ1yYyAlrzFwwAqPwmsggUo6PigvPqMF0UHFhogBWYW/1jSOUdoI+XU1NaLY+UDYO\nLQeCU1HmsRqNSw0Cp8LBySAgXxj30qYRYI2ta5APjPM3u6eapKU4X1alPireU4d6\nK6NrfYCaj3DxsEPgAh5R3cbYmbmx8k418byyErMOqyOtOPaOfXS/zu0kWPE8WfMV\n8vsumShJAmvVrU+EkiEKobRZXYHI5cPNqO8PDpAGOE4wCQz/vU4sAwvfSeYN7R+H\noGkfFJpZFl4mVWYFDyr935PJr9jg4O/CSvgL\n-----END CERTIFICATE-----\n",
            "id": "https://45A8EC1E76FFE23A2F4E50B84C6EEE9E.gr7.us-west-2.eks.amazonaws.com/healthz",
            "insecure": false,
            "request_headers": null,
            "response_headers": {
              "Cache-Control": "no-cache, private",
              "Content-Length": "2",
              "Content-Type": "text/plain; charset=utf-8",
              "Date": "Sat, 26 Jun 2021 00:41:55 GMT",
              "X-Content-Type-Options": "nosniff",
              "X-Kubernetes-Pf-Flowschema-Uid": "6f4f4cb0-22ab-4168-a62b-3e819e97dac2",
              "X-Kubernetes-Pf-Prioritylevel-Uid": "cbc76677-2b71-4c84-a207-e922ffb47de6"
            },
            "timeout": 300,
            "url": "https://45A8EC1E76FFE23A2F4E50B84C6EEE9E.gr7.us-west-2.eks.amazonaws.com/healthz"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_autoscaling_group",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:autoscaling:us-west-2:901305836452:autoScalingGroup:a8213b28-f28a-4f2d-bc53-2ae8e7df140f:autoScalingGroupName/botney-eks-QBJxnN1Z-worker-group-120210625200741468100000012",
            "availability_zones": [
              "us-west-2a",
              "us-west-2b"
            ],
            "capacity_rebalance": false,
            "default_cooldown": 300,
            "desired_capacity": 3,
            "enabled_metrics": [],
            "force_delete": false,
            "force_delete_warm_pool": false,
            "health_check_grace_period": 300,
            "health_check_type": "EC2",
            "id": "botney-eks-QBJxnN1Z-worker-group-120210625200741468100000012",
            "initial_lifecycle_hook": [],
            "instance_refresh": [],
            "launch_configuration": "botney-eks-QBJxnN1Z-worker-group-120210625200731685800000011",
            "launch_template": [],
            "load_balancers": [],
            "max_instance_lifetime": 0,
            "max_size": 3,
            "metrics_granularity": "1Minute",
            "min_elb_capacity": null,
            "min_size": 1,
            "mixed_instances_policy": [],
            "name": "botney-eks-QBJxnN1Z-worker-group-120210625200741468100000012",
            "name_prefix": "botney-eks-QBJxnN1Z-worker-group-1",
            "placement_group": "",
            "protect_from_scale_in": false,
            "service_linked_role_arn": "arn:aws:iam::901305836452:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling",
            "suspended_processes": [
              "AZRebalance"
            ],
            "tag": [
              {
                "key": "App",
                "propagate_at_launch": true,
                "value": "botney"
              },
              {
                "key": "GithubOrg",
                "propagate_at_launch": true,
                "value": "terraform-aws-modules"
              },
              {
                "key": "GithubRepo",
                "propagate_at_launch": true,
                "value": "terraform-aws-eks"
              },
              {
                "key": "Name",
                "propagate_at_launch": true,
                "value": "botney-eks-QBJxnN1Z-worker-group-1-eks_asg"
              },
              {
                "key": "k8s.io/cluster/botney-eks-QBJxnN1Z",
                "propagate_at_launch": true,
                "value": "owned"
              },
              {
                "key": "kubernetes.io/cluster/botney-eks-QBJxnN1Z",
                "propagate_at_launch": true,
                "value": "owned"
              }
            ],
            "tags": null,
            "target_group_arns": [],
            "termination_policies": [],
            "timeouts": null,
            "vpc_zone_identifier": [
              "subnet-076212cebf120ffe4",
              "subnet-08433c50deb3affc8"
            ],
            "wait_for_capacity_timeout": "10m",
            "wait_for_elb_capacity": null,
            "warm_pool": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_partition.current",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_ami.eks_worker",
            "aws_security_group.all_worker_mgmt",
            "aws_security_group.worker_group_mgmt_one",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_subnet.private",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-west-2:901305836452:cluster/botney-eks-QBJxnN1Z",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EWXlOVEl3TURJeU1Gb1hEVE14TURZeU16SXdNREl5TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUZ4ClpmWEZKZ1E4V005UnJjVTJMbFdLbnhVN0FKeGNFNmVvMDc3S25uOTd3SFJMM0htSkdOY3BxdDU3VktDbFZvUUkKTFBTMGtUUWFrWnZhc2pTLzNCNG5NdlpPME1pYkh1TW5ITlFIRld1MEo0UmtieGZhSFA3QktNakdXRUlTYmcxcAptOHFFQjZKTDdOUzl6VDQrQXk2NWVmTzJaZG1iM3JEZG1zWHRJTHJrN3pVUDhQUGVQWWtUeVo2ZDVuZnJPVXEwCk1DbkM0YWxpRUJ6UEVlQlB5NXFlUzVqaDMyazZQUnlFUUxlWWtISWdzOHgvdmNqNC9Ba2ZpT3ljM0VVUXIzK24KeHpzOE1KdlZnajRaaUsxWVA0dlVhcEVSNjlPZ2kyZzJTQUFxRzVabXNaelRnaXZFblFBUldqZ1J1LzBrMnF3Lwpad3ZQeE81aEU0M1A0cGpSalNNQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZMUkErUUJGKzBOVWk2Z25sWTFSZlcwM0ZWZnlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCa0U2MlFqcTN2YUhLMW5CU0s0K3pjVXNpc3VUN3VQa1R4RzR3QnZMdjEyMy9Rd1hyZwpaMXlZeUFscnpGd3dBcVB3bXNnZ1VvNlBpZ3ZQcU1GMFVIRmhvZ0JXWVcvMWpTT1Vkb0krWFUxTmFMWStVRFlPCkxRZUNVMUhtc1JxTlN3MENwOExCeVNBZ1h4ajMwcVlSWUkydGE1QVBqUE0zdTZlYXBLVTRYMWFsUGlyZVU0ZDYKSzZOcmZZQ2FqM0R4c0VQZ0FoNVIzY2JZbWJteDhrNDE4Ynl5RXJNT3F5T3RPUGFPZlhTL3p1MGtXUEU4V2ZNVgo4dnN1bVNoSkFtdlZyVStFa2lFS29iUlpYWUhJNWNQTnFPOFBEcEFHT0U0d0NRei92VTRzQXd2ZlNlWU43UitICm9Ha2ZGSnBaRmw0bVZXWUZEeXI5MzVQSnI5amc0Ty9DU3ZnTAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
              }
            ],
            "created_at": "2021-06-25 19:55:32.469 +0000 UTC",
            "enabled_cluster_log_types": [],
            "encryption_config": [],
            "endpoint": "https://45A8EC1E76FFE23A2F4E50B84C6EEE9E.gr7.us-west-2.eks.amazonaws.com",
            "id": "botney-eks-QBJxnN1Z",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-west-2.amazonaws.com/id/45A8EC1E76FFE23A2F4E50B84C6EEE9E"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "service_ipv4_cidr": "172.20.0.0/16"
              }
            ],
            "name": "botney-eks-QBJxnN1Z",
            "platform_version": "eks.1",
            "role_arn": "arn:aws:iam::901305836452:role/botney-eks-QBJxnN1Z20210625195500657700000003",
            "status": "ACTIVE",
            "tags": {
              "App": "botney",
              "GithubOrg": "terraform-aws-modules",
              "GithubRepo": "terraform-aws-eks"
            },
            "tags_all": {
              "App": "botney",
              "GithubOrg": "terraform-aws-modules",
              "GithubRepo": "terraform-aws-eks"
            },
            "timeouts": {
              "create": "30m",
              "delete": "15m",
              "update": null
            },
            "version": "1.20",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0a302a128193c9ada",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-035ef515dfb667d49"
                ],
                "subnet_ids": [
                  "subnet-076212cebf120ffe4",
                  "subnet-08433c50deb3affc8"
                ],
                "vpc_id": "vpc-06b0ac8f858c3ed98"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.vpc.aws_subnet.private"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::901305836452:instance-profile/botney-eks-QBJxnN1Z2021062520072954410000000d",
            "create_date": "2021-06-25T20:07:29Z",
            "id": "botney-eks-QBJxnN1Z2021062520072954410000000d",
            "name": "botney-eks-QBJxnN1Z2021062520072954410000000d",
            "name_prefix": "botney-eks-QBJxnN1Z",
            "path": "/",
            "role": "botney-eks-QBJxnN1Z2021062520072735610000000c",
            "tags": {
              "App": "botney",
              "GithubOrg": "terraform-aws-modules",
              "GithubRepo": "terraform-aws-eks"
            },
            "tags_all": {
              "App": "botney",
              "GithubOrg": "terraform-aws-modules",
              "GithubRepo": "terraform-aws-eks"
            },
            "unique_id": "AIPA5DWQDUOSGORUQX4XB"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_partition.current",
            "random_string.suffix",
            "aws_security_group.worker_group_mgmt_one",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "data.aws_availability_zones.available",
            "module.eks.aws_eks_cluster.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::901305836452:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/45A8EC1E76FFE23A2F4E50B84C6EEE9E",
            "client_id_list": [
              "sts.amazonaws.com"
            ],
            "id": "arn:aws:iam::901305836452:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/45A8EC1E76FFE23A2F4E50B84C6EEE9E",
            "tags": {
              "App": "botney",
              "GithubOrg": "terraform-aws-modules",
              "GithubRepo": "terraform-aws-eks",
              "Name": "botney-eks-QBJxnN1Z-eks-irsa"
            },
            "tags_all": {
              "App": "botney",
              "GithubOrg": "terraform-aws-modules",
              "GithubRepo": "terraform-aws-eks",
              "Name": "botney-eks-QBJxnN1Z-eks-irsa"
            },
            "thumbprint_list": [
              "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
            ],
            "url": "oidc.eks.us-west-2.amazonaws.com/id/45A8EC1E76FFE23A2F4E50B84C6EEE9E"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_subnet.private",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.data.aws_partition.current",
            "random_string.suffix",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_availability_zones.available",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_elb_sl_role_creation",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::901305836452:policy/botney-eks-QBJxnN1Z-elb-sl-role-creation20210625195500657200000002",
            "description": "Permissions for EKS to create AWSServiceRoleForElasticLoadBalancing service-linked role",
            "id": "arn:aws:iam::901305836452:policy/botney-eks-QBJxnN1Z-elb-sl-role-creation20210625195500657200000002",
            "name": "botney-eks-QBJxnN1Z-elb-sl-role-creation20210625195500657200000002",
            "name_prefix": "botney-eks-QBJxnN1Z-elb-sl-role-creation",
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "policy_id": "ANPA5DWQDUOSCCYRKXEKN",
            "tags": {
              "App": "botney",
              "GithubOrg": "terraform-aws-modules",
              "GithubRepo": "terraform-aws-eks"
            },
            "tags_all": {
              "App": "botney",
              "GithubOrg": "terraform-aws-modules",
              "GithubRepo": "terraform-aws-eks"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::901305836452:role/botney-eks-QBJxnN1Z20210625195500657700000003",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2021-06-25T19:55:01Z",
            "description": "",
            "force_detach_policies": true,
            "id": "botney-eks-QBJxnN1Z20210625195500657700000003",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::901305836452:policy/botney-eks-QBJxnN1Z-elb-sl-role-creation20210625195500657200000002",
              "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
              "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
              "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
            ],
            "max_session_duration": 3600,
            "name": "botney-eks-QBJxnN1Z20210625195500657700000003",
            "name_prefix": "botney-eks-QBJxnN1Z",
            "path": "/",
            "permissions_boundary": null,
            "tags": {
              "App": "botney",
              "GithubOrg": "terraform-aws-modules",
              "GithubRepo": "terraform-aws-eks"
            },
            "tags_all": {
              "App": "botney",
              "GithubOrg": "terraform-aws-modules",
              "GithubRepo": "terraform-aws-eks"
            },
            "unique_id": "AROA5DWQDUOSPDDRHLRBE"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::901305836452:role/botney-eks-QBJxnN1Z2021062520072735610000000c",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSWorkerAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2021-06-25T20:07:27Z",
            "description": "",
            "force_detach_policies": true,
            "id": "botney-eks-QBJxnN1Z2021062520072735610000000c",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
              "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
            ],
            "max_session_duration": 3600,
            "name": "botney-eks-QBJxnN1Z2021062520072735610000000c",
            "name_prefix": "botney-eks-QBJxnN1Z",
            "path": "/",
            "permissions_boundary": null,
            "tags": {
              "App": "botney",
              "GithubOrg": "terraform-aws-modules",
              "GithubRepo": "terraform-aws-eks"
            },
            "tags_all": {
              "App": "botney",
              "GithubOrg": "terraform-aws-modules",
              "GithubRepo": "terraform-aws-eks"
            },
            "unique_id": "AROA5DWQDUOSCNATNRTER"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_subnet.private",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_partition.current",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSClusterPolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "botney-eks-QBJxnN1Z20210625195500657700000003-20210625195503158500000004",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "botney-eks-QBJxnN1Z20210625195500657700000003"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_partition.current",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSServicePolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "botney-eks-QBJxnN1Z20210625195500657700000003-20210625195503164700000005",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
            "role": "botney-eks-QBJxnN1Z20210625195500657700000003"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_partition.current",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSVPCResourceControllerPolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "botney-eks-QBJxnN1Z20210625195500657700000003-20210625195503216400000007",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
            "role": "botney-eks-QBJxnN1Z20210625195500657700000003"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_partition.current",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_elb_sl_role_creation",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "botney-eks-QBJxnN1Z20210625195500657700000003-20210625195503184400000006",
            "policy_arn": "arn:aws:iam::901305836452:policy/botney-eks-QBJxnN1Z-elb-sl-role-creation20210625195500657200000002",
            "role": "botney-eks-QBJxnN1Z20210625195500657700000003"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_policy.cluster_elb_sl_role_creation",
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEC2ContainerRegistryReadOnly",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "botney-eks-QBJxnN1Z2021062520072735610000000c-2021062520073004300000000e",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "botney-eks-QBJxnN1Z2021062520072735610000000c"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_security_group.workers",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_partition.current",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.vpc.aws_subnet.private",
            "random_string.suffix",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_iam_role.cluster",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEKSWorkerNodePolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "botney-eks-QBJxnN1Z2021062520072735610000000c-2021062520073004910000000f",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "botney-eks-QBJxnN1Z2021062520072735610000000c"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role.cluster",
            "data.aws_availability_zones.available",
            "module.eks.aws_security_group.workers",
            "module.eks.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_iam_role.workers",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "random_string.suffix",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEKS_CNI_Policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "botney-eks-QBJxnN1Z2021062520072735610000000c-20210625200730054500000010",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "botney-eks-QBJxnN1Z2021062520072735610000000c"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_partition.current",
            "random_string.suffix",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_security_group.workers",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.vpc.aws_subnet.private",
            "data.aws_availability_zones.available",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group.cluster"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_launch_configuration",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:autoscaling:us-west-2:901305836452:launchConfiguration:07387491-accd-40e5-b343-b81fa05d3d20:launchConfigurationName/botney-eks-QBJxnN1Z-worker-group-120210625200731685800000011",
            "associate_public_ip_address": false,
            "ebs_block_device": [],
            "ebs_optimized": true,
            "enable_monitoring": true,
            "ephemeral_block_device": [],
            "iam_instance_profile": "botney-eks-QBJxnN1Z2021062520072954410000000d",
            "id": "botney-eks-QBJxnN1Z-worker-group-120210625200731685800000011",
            "image_id": "ami-0a1abe779ecfc6a3e",
            "instance_type": "t3.medium",
            "key_name": "",
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "name": "botney-eks-QBJxnN1Z-worker-group-120210625200731685800000011",
            "name_prefix": "botney-eks-QBJxnN1Z-worker-group-1",
            "placement_tenancy": "",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "encrypted": false,
                "iops": 0,
                "throughput": 0,
                "volume_size": 100,
                "volume_type": "gp2"
              }
            ],
            "security_groups": [
              "sg-0809db9c54ef99d10",
              "sg-0ce09df83b135decf",
              "sg-0d13b8f5c8b0d11fd"
            ],
            "spot_price": "",
            "user_data": null,
            "user_data_base64": "IyEvYmluL2Jhc2ggLWUKCiMgQWxsb3cgdXNlciBzdXBwbGllZCBwcmUgdXNlcmRhdGEgY29kZQoKCiMgQm9vdHN0cmFwIGFuZCBqb2luIHRoZSBjbHVzdGVyCi9ldGMvZWtzL2Jvb3RzdHJhcC5zaCAtLWI2NC1jbHVzdGVyLWNhICdMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VNMWVrTkRRV01yWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2NtUlhTbXdLWTIwMWJHUkhWbnBOUWpSWVJGUkplRTFFV1hsT1ZFbDNUVVJKZVUxR2IxaEVWRTE0VFVSWmVVMTZTWGROUkVsNVRVWnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZVE5XYVZwWVNuVmFXRkpzWTNwRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCVFVaNENscG1XRVpLWjFFNFYwMDVVbkpqVlRKTWJGZExibmhWTjBGS2VHTkZObVZ2TURjM1MyNXVPVGQzU0ZKTU0waHRTa2RPWTNCeGREVTNWa3REYkZadlVVa0tURkJUTUd0VVVXRnJXblpoYzJwVEx6TkNORzVOZGxwUE1FMXBZa2gxVFc1SVRsRklSbGQxTUVvMFVtdGllR1poU0ZBM1FrdE5ha2RYUlVsVFltY3hjQXB0T0hGRlFqWktURGRPVXpsNlZEUXJRWGsyTldWbVR6SmFaRzFpTTNKRVpHMXpXSFJKVEhKck4zcFZVRGhRVUdWUVdXdFVlVm8yWkRWdVpuSlBWWEV3Q2sxRGJrTTBZV3hwUlVKNlVFVmxRbEI1TlhGbFV6VnFhRE15YXpaUVVubEZVVXhsV1d0SVNXZHpPSGd2ZG1OcU5DOUJhMlpwVDNsak0wVlZVWEl6SzI0S2VIcHpPRTFLZGxabmFqUmFhVXN4V1ZBMGRsVmhjRVZTTmpsUFoya3laekpUUVVGeFJ6VmFiWE5hZWxSbmFYWkZibEZCVWxkcVoxSjFMekJyTW5GM0x3cGFkM1pRZUU4MWFFVTBNMUEwY0dwU2FsTk5RMEYzUlVGQllVNURUVVZCZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVRTRSMEV4VldSRmQwVkNDaTkzVVVaTlFVMUNRV1k0ZDBoUldVUldVakJQUWtKWlJVWk1Va0VyVVVKR0t6Qk9WV2syWjI1c1dURlNabGN3TTBaV1pubE5RVEJIUTFOeFIxTkpZak1LUkZGRlFrTjNWVUZCTkVsQ1FWRkNhMFUyTWxGcWNUTjJZVWhMTVc1Q1UwczBLM3BqVlhOcGMzVlVOM1ZRYTFSNFJ6UjNRblpNZGpFeU15OVJkMWh5WndwYU1YbFplVUZzY25wR2QzZEJjVkIzYlhObloxVnZObEJwWjNaUWNVMUdNRlZJUm1odlowSlhXVmN2TVdwVFQxVmtiMGtyV0ZVeFRtRk1XU3RWUkZsUENreFJaVU5WTVVodGMxSnhUbE4zTUVOd09FeENlVk5CWjFoNGFqTXdjVmxTV1VreWRHRTFRVkJxVUUwemRUWmxZWEJMVlRSWU1XRnNVR2x5WlZVMFpEWUtTelpPY21aWlEyRnFNMFI0YzBWUVowRm9OVkl6WTJKWmJXSnRlRGhyTkRFNFlubDVSWEpOVDNGNVQzUlBVR0ZQWmxoVEwzcDFNR3RYVUVVNFYyWk5WZ280ZG5OMWJWTm9Ta0Z0ZGxaeVZTdEZhMmxGUzI5aVVscFlXVWhKTldOUVRuRlBPRkJFY0VGSFQwVTBkME5SZWk5MlZUUnpRWGQyWmxObFdVNDNVaXRJQ205SGEyWkdTbkJhUm13MGJWWlhXVVpFZVhJNU16VlFTbkk1YW1jMFR5OURVM1puVEFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2c9PScgLS1hcGlzZXJ2ZXItZW5kcG9pbnQgJ2h0dHBzOi8vNDVBOEVDMUU3NkZGRTIzQTJGNEU1MEI4NEM2RUVFOUUuZ3I3LnVzLXdlc3QtMi5la3MuYW1hem9uYXdzLmNvbScgIC0ta3ViZWxldC1leHRyYS1hcmdzICIiICdib3RuZXktZWtzLVFCSnhuTjFaJwoKIyBBbGxvdyB1c2VyIHN1cHBsaWVkIHVzZXJkYXRhIGNvZGUKZWNobyBmb28gYmFyCg==",
            "vpc_classic_link_id": "",
            "vpc_classic_link_security_groups": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.data.aws_ami.eks_worker",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group_rule.workers_ingress_self",
            "module.eks.data.aws_partition.current",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.vpc.aws_subnet.private",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.eks.aws_security_group_rule.workers_ingress_cluster_primary",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_security_group_rule.workers_egress_internet",
            "aws_security_group.all_worker_mgmt",
            "aws_security_group.worker_group_mgmt_one",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.eks.aws_security_group.workers",
            "random_string.suffix",
            "module.eks.aws_security_group_rule.cluster_primary_ingress_workers",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:901305836452:security-group/sg-035ef515dfb667d49",
            "description": "EKS cluster security group.",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow cluster egress access to the Internet.",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-035ef515dfb667d49",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Allow pods to communicate with the EKS cluster API.",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0d13b8f5c8b0d11fd"
                ],
                "self": false,
                "to_port": 443
              }
            ],
            "name": "botney-eks-QBJxnN1Z20210625195520780500000008",
            "name_prefix": "botney-eks-QBJxnN1Z",
            "owner_id": "901305836452",
            "revoke_rules_on_delete": false,
            "tags": {
              "App": "botney",
              "GithubOrg": "terraform-aws-modules",
              "GithubRepo": "terraform-aws-eks",
              "Name": "botney-eks-QBJxnN1Z-eks_cluster_sg"
            },
            "tags_all": {
              "App": "botney",
              "GithubOrg": "terraform-aws-modules",
              "GithubRepo": "terraform-aws-eks",
              "Name": "botney-eks-QBJxnN1Z-eks_cluster_sg"
            },
            "timeouts": null,
            "vpc_id": "vpc-06b0ac8f858c3ed98"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:901305836452:security-group/sg-0d13b8f5c8b0d11fd",
            "description": "Security group for all nodes in the cluster.",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow nodes all egress to the Internet.",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0d13b8f5c8b0d11fd",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [
                  "sg-0101064a831459a48"
                ],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [],
                "description": "Allow node to communicate with each other.",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": true,
                "to_port": 0
              },
              {
                "cidr_blocks": [],
                "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-035ef515dfb667d49"
                ],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [],
                "description": "Allow workers pods to receive communication from the cluster control plane.",
                "from_port": 1025,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-035ef515dfb667d49"
                ],
                "self": false,
                "to_port": 65535
              }
            ],
            "name": "botney-eks-QBJxnN1Z2021062519552315450000000b",
            "name_prefix": "botney-eks-QBJxnN1Z",
            "owner_id": "901305836452",
            "revoke_rules_on_delete": false,
            "tags": {
              "App": "botney",
              "GithubOrg": "terraform-aws-modules",
              "GithubRepo": "terraform-aws-eks",
              "Name": "botney-eks-QBJxnN1Z-eks_worker_sg",
              "kubernetes.io/cluster/botney-eks-QBJxnN1Z": "owned"
            },
            "tags_all": {
              "App": "botney",
              "GithubOrg": "terraform-aws-modules",
              "GithubRepo": "terraform-aws-eks",
              "Name": "botney-eks-QBJxnN1Z-eks_worker_sg",
              "kubernetes.io/cluster/botney-eks-QBJxnN1Z": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-06b0ac8f858c3ed98"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster_egress_internet",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow cluster egress access to the Internet.",
            "from_port": 0,
            "id": "sgrule-1757804899",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-035ef515dfb667d49",
            "self": false,
            "source_security_group_id": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster_https_worker_ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [],
            "description": "Allow pods to communicate with the EKS cluster API.",
            "from_port": 443,
            "id": "sgrule-3041267324",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-035ef515dfb667d49",
            "self": false,
            "source_security_group_id": "sg-0d13b8f5c8b0d11fd",
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_egress_internet",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow nodes all egress to the Internet.",
            "from_port": 0,
            "id": "sgrule-4005354295",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-0d13b8f5c8b0d11fd",
            "self": false,
            "source_security_group_id": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [],
            "description": "Allow workers pods to receive communication from the cluster control plane.",
            "from_port": 1025,
            "id": "sgrule-973384924",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0d13b8f5c8b0d11fd",
            "self": false,
            "source_security_group_id": "sg-035ef515dfb667d49",
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster_https",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [],
            "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
            "from_port": 443,
            "id": "sgrule-3260529311",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0d13b8f5c8b0d11fd",
            "self": false,
            "source_security_group_id": "sg-035ef515dfb667d49",
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_self",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [],
            "description": "Allow node to communicate with each other.",
            "from_port": 0,
            "id": "sgrule-3104071939",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-0d13b8f5c8b0d11fd",
            "self": false,
            "source_security_group_id": "sg-0d13b8f5c8b0d11fd",
            "to_port": 0,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_vpc.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "aws_auth",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "mapAccounts": "[]\n",
              "mapRoles": "- \"groups\":\n  - \"system:bootstrappers\"\n  - \"system:nodes\"\n  \"rolearn\": \"arn:aws:iam::901305836452:role/botney-eks-QBJxnN1Z2021062520072735610000000c\"\n  \"username\": \"system:node:{{EC2PrivateDNSName}}\"\n",
              "mapUsers": "[]\n"
            },
            "id": "kube-system/aws-auth",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/managed-by": "Terraform",
                  "terraform.io/module": "terraform-aws-modules.eks.aws"
                },
                "name": "aws-auth",
                "namespace": "kube-system",
                "resource_version": "709",
                "uid": "2b55682a-715d-4a4a-824a-e28e7f82a24d"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.data.aws_caller_identity.current",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.vpc.aws_subnet.private",
            "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role",
            "module.vpc.aws_vpc.this",
            "random_string.suffix",
            "aws_security_group.worker_group_mgmt_one",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.eks.aws_security_group_rule.cluster_private_access_sg_source",
            "module.eks.data.http.wait_for_cluster",
            "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role",
            "data.aws_eks_cluster.cluster",
            "module.eks.data.aws_ami.eks_worker_windows",
            "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_security_group_rule.cluster_private_access_cidrs_source",
            "module.eks.data.aws_ami.eks_worker",
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.data.aws_partition.current",
            "module.eks.module.fargate.aws_iam_role.eks_fargate_pod",
            "module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_security_group.cluster",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "local_file",
      "name": "kubeconfig",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: v1\npreferences: {}\nkind: Config\n\nclusters:\n- cluster:\n    server: https://45A8EC1E76FFE23A2F4E50B84C6EEE9E.gr7.us-west-2.eks.amazonaws.com\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EWXlOVEl3TURJeU1Gb1hEVE14TURZeU16SXdNREl5TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUZ4ClpmWEZKZ1E4V005UnJjVTJMbFdLbnhVN0FKeGNFNmVvMDc3S25uOTd3SFJMM0htSkdOY3BxdDU3VktDbFZvUUkKTFBTMGtUUWFrWnZhc2pTLzNCNG5NdlpPME1pYkh1TW5ITlFIRld1MEo0UmtieGZhSFA3QktNakdXRUlTYmcxcAptOHFFQjZKTDdOUzl6VDQrQXk2NWVmTzJaZG1iM3JEZG1zWHRJTHJrN3pVUDhQUGVQWWtUeVo2ZDVuZnJPVXEwCk1DbkM0YWxpRUJ6UEVlQlB5NXFlUzVqaDMyazZQUnlFUUxlWWtISWdzOHgvdmNqNC9Ba2ZpT3ljM0VVUXIzK24KeHpzOE1KdlZnajRaaUsxWVA0dlVhcEVSNjlPZ2kyZzJTQUFxRzVabXNaelRnaXZFblFBUldqZ1J1LzBrMnF3Lwpad3ZQeE81aEU0M1A0cGpSalNNQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZMUkErUUJGKzBOVWk2Z25sWTFSZlcwM0ZWZnlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCa0U2MlFqcTN2YUhLMW5CU0s0K3pjVXNpc3VUN3VQa1R4RzR3QnZMdjEyMy9Rd1hyZwpaMXlZeUFscnpGd3dBcVB3bXNnZ1VvNlBpZ3ZQcU1GMFVIRmhvZ0JXWVcvMWpTT1Vkb0krWFUxTmFMWStVRFlPCkxRZUNVMUhtc1JxTlN3MENwOExCeVNBZ1h4ajMwcVlSWUkydGE1QVBqUE0zdTZlYXBLVTRYMWFsUGlyZVU0ZDYKSzZOcmZZQ2FqM0R4c0VQZ0FoNVIzY2JZbWJteDhrNDE4Ynl5RXJNT3F5T3RPUGFPZlhTL3p1MGtXUEU4V2ZNVgo4dnN1bVNoSkFtdlZyVStFa2lFS29iUlpYWUhJNWNQTnFPOFBEcEFHT0U0d0NRei92VTRzQXd2ZlNlWU43UitICm9Ha2ZGSnBaRmw0bVZXWUZEeXI5MzVQSnI5amc0Ty9DU3ZnTAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n  name: eks_botney-eks-QBJxnN1Z\n\ncontexts:\n- context:\n    cluster: eks_botney-eks-QBJxnN1Z\n    user: eks_botney-eks-QBJxnN1Z\n  name: eks_botney-eks-QBJxnN1Z\n\ncurrent-context: eks_botney-eks-QBJxnN1Z\n\nusers:\n- name: eks_botney-eks-QBJxnN1Z\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1alpha1\n      command: aws-iam-authenticator\n      args:\n        - \"token\"\n        - \"-i\"\n        - \"botney-eks-QBJxnN1Z\"\n",
            "content_base64": null,
            "directory_permission": "0755",
            "file_permission": "0600",
            "filename": "./kubeconfig_botney-eks-QBJxnN1Z",
            "id": "e290060f90628f08718321f96574930b0d25aed1",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
            "module.eks.data.aws_iam_role.custom_cluster_iam_role",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
            "module.eks.aws_security_group.workers",
            "module.eks.data.aws_partition.current",
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_vpc.this",
            "module.eks.aws_security_group_rule.cluster_egress_internet",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": null,
            "associate_with_private_ip": null,
            "association_id": "eipassoc-0c5f70eff0800be47",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-0b2677977ea887353",
            "instance": "",
            "network_border_group": "us-west-2",
            "network_interface": "eni-0319f0d59403c0644",
            "private_dns": "ip-10-0-3-212.us-west-2.compute.internal",
            "private_ip": "10.0.3.212",
            "public_dns": "ec2-35-82-146-54.us-west-2.compute.amazonaws.com",
            "public_ip": "35.82.146.54",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Name": "botney-vpc-us-west-2a"
            },
            "tags_all": {
              "Name": "botney-vpc-us-west-2a"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:901305836452:internet-gateway/igw-0df090651f19bcce9",
            "id": "igw-0df090651f19bcce9",
            "owner_id": "901305836452",
            "tags": {
              "Name": "botney-vpc"
            },
            "tags_all": {
              "Name": "botney-vpc"
            },
            "vpc_id": "vpc-06b0ac8f858c3ed98"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-0b2677977ea887353",
            "connectivity_type": "public",
            "id": "nat-01c19218c7aaa4222",
            "network_interface_id": "eni-0319f0d59403c0644",
            "private_ip": "10.0.3.212",
            "public_ip": "35.82.146.54",
            "subnet_id": "subnet-010d707921f103442",
            "tags": {
              "Name": "botney-vpc-us-west-2a"
            },
            "tags_all": {
              "Name": "botney-vpc-us-west-2a"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-03ca90bde1ff28ea91080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-01c19218c7aaa4222",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-03ca90bde1ff28ea9",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-0df090651f19bcce9",
            "id": "r-rtb-0732d9eb03b99bd2c1080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0732d9eb03b99bd2c",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:901305836452:route-table/rtb-03ca90bde1ff28ea9",
            "id": "rtb-03ca90bde1ff28ea9",
            "owner_id": "901305836452",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "",
                "instance_id": "",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "nat-01c19218c7aaa4222",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "botney-vpc-private"
            },
            "tags_all": {
              "Name": "botney-vpc-private"
            },
            "vpc_id": "vpc-06b0ac8f858c3ed98"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "data.aws_availability_zones.available"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:901305836452:route-table/rtb-0732d9eb03b99bd2c",
            "id": "rtb-0732d9eb03b99bd2c",
            "owner_id": "901305836452",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-0df090651f19bcce9",
                "instance_id": "",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "botney-vpc-public"
            },
            "tags_all": {
              "Name": "botney-vpc-public"
            },
            "vpc_id": "vpc-06b0ac8f858c3ed98"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0182eef728b65a27a",
            "route_table_id": "rtb-03ca90bde1ff28ea9",
            "subnet_id": "subnet-08433c50deb3affc8"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-04a7e628f038d5372",
            "route_table_id": "rtb-03ca90bde1ff28ea9",
            "subnet_id": "subnet-076212cebf120ffe4"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-009929d629c8b0f6f",
            "route_table_id": "rtb-0732d9eb03b99bd2c",
            "subnet_id": "subnet-010d707921f103442"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0bb904abf04046970",
            "route_table_id": "rtb-0732d9eb03b99bd2c",
            "subnet_id": "subnet-0f84effc04cffd452"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:901305836452:subnet/subnet-08433c50deb3affc8",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2a",
            "availability_zone_id": "usw2-az2",
            "cidr_block": "10.0.1.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-08433c50deb3affc8",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "901305836452",
            "tags": {
              "Name": "botney-vpc-private-us-west-2a",
              "kubernetes.io/cluster/botney-eks-QBJxnN1Z": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "botney-vpc-private-us-west-2a",
              "kubernetes.io/cluster/botney-eks-QBJxnN1Z": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-06b0ac8f858c3ed98"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:901305836452:subnet/subnet-076212cebf120ffe4",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2b",
            "availability_zone_id": "usw2-az1",
            "cidr_block": "10.0.2.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-076212cebf120ffe4",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "901305836452",
            "tags": {
              "Name": "botney-vpc-private-us-west-2b",
              "kubernetes.io/cluster/botney-eks-QBJxnN1Z": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "botney-vpc-private-us-west-2b",
              "kubernetes.io/cluster/botney-eks-QBJxnN1Z": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-06b0ac8f858c3ed98"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_string.suffix"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:901305836452:subnet/subnet-010d707921f103442",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2a",
            "availability_zone_id": "usw2-az2",
            "cidr_block": "10.0.3.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-010d707921f103442",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "901305836452",
            "tags": {
              "Name": "botney-vpc-public-us-west-2a",
              "kubernetes.io/cluster/botney-eks-QBJxnN1Z": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "botney-vpc-public-us-west-2a",
              "kubernetes.io/cluster/botney-eks-QBJxnN1Z": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-06b0ac8f858c3ed98"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:901305836452:subnet/subnet-0f84effc04cffd452",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2b",
            "availability_zone_id": "usw2-az1",
            "cidr_block": "10.0.4.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-0f84effc04cffd452",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "901305836452",
            "tags": {
              "Name": "botney-vpc-public-us-west-2b",
              "kubernetes.io/cluster/botney-eks-QBJxnN1Z": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "botney-vpc-public-us-west-2b",
              "kubernetes.io/cluster/botney-eks-QBJxnN1Z": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-06b0ac8f858c3ed98"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "random_string.suffix",
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:901305836452:vpc/vpc-06b0ac8f858c3ed98",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-053815b71775f7e0c",
            "default_route_table_id": "rtb-091d954030218aa7e",
            "default_security_group_id": "sg-08dc2031f9f08ac76",
            "dhcp_options_id": "dopt-f6b3918e",
            "enable_classiclink": false,
            "enable_classiclink_dns_support": false,
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "id": "vpc-06b0ac8f858c3ed98",
            "instance_tenancy": "default",
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "main_route_table_id": "rtb-091d954030218aa7e",
            "owner_id": "901305836452",
            "tags": {
              "Name": "botney-vpc"
            },
            "tags_all": {
              "Name": "botney-vpc"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "create_before_destroy": true
        }
      ]
    }
  ]
}
